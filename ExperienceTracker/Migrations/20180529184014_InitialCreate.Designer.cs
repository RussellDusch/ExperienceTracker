// <auto-generated />
using ExperienceTracker.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ExperienceTracker.Migrations
{
    [DbContext(typeof(ExperienceTrackerContext))]
    [Migration("20180529184014_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExperienceTracker.Models.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("ExperienceTracker.Models.Encounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AdditionalExperience");

                    b.Property<int?>("CampaignId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("Encounters");
                });

            modelBuilder.Entity("ExperienceTracker.Models.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChallengeRating");

                    b.HasKey("Id");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("ExperienceTracker.Models.MonsterEncounter", b =>
                {
                    b.Property<int>("MonsterId");

                    b.Property<int>("EncounterId");

                    b.Property<int>("Count");

                    b.Property<int>("Id");

                    b.HasKey("MonsterId", "EncounterId");

                    b.HasIndex("EncounterId");

                    b.ToTable("MonsterEncounter");
                });

            modelBuilder.Entity("ExperienceTracker.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CampaignId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ExperienceTracker.Models.PlayerEncounter", b =>
                {
                    b.Property<int>("PlayerId");

                    b.Property<int>("EncounterId");

                    b.Property<int>("Id");

                    b.HasKey("PlayerId", "EncounterId");

                    b.HasIndex("EncounterId");

                    b.ToTable("PlayerEncounter");
                });

            modelBuilder.Entity("ExperienceTracker.Models.Encounter", b =>
                {
                    b.HasOne("ExperienceTracker.Models.Campaign", "Campaign")
                        .WithMany("Encounters")
                        .HasForeignKey("CampaignId");
                });

            modelBuilder.Entity("ExperienceTracker.Models.MonsterEncounter", b =>
                {
                    b.HasOne("ExperienceTracker.Models.Encounter", "Encounter")
                        .WithMany("Monsters")
                        .HasForeignKey("EncounterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExperienceTracker.Models.Monster", "Monster")
                        .WithMany("Encounters")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ExperienceTracker.Models.Player", b =>
                {
                    b.HasOne("ExperienceTracker.Models.Campaign", "Campaign")
                        .WithMany("Players")
                        .HasForeignKey("CampaignId");
                });

            modelBuilder.Entity("ExperienceTracker.Models.PlayerEncounter", b =>
                {
                    b.HasOne("ExperienceTracker.Models.Encounter", "Encounter")
                        .WithMany("Players")
                        .HasForeignKey("EncounterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExperienceTracker.Models.Player", "Player")
                        .WithMany("Encounters")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
