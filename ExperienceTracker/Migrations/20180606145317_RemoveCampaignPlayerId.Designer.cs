// <auto-generated />
using System;
using ExperienceTracker.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExperienceTracker.Migrations
{
    [DbContext(typeof(ExperienceTrackerContext))]
    [Migration("20180606145317_RemoveCampaignPlayerId")]
    partial class RemoveCampaignPlayerId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExperienceTracker.Models.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("ExperienceTracker.Models.CampaignPlayer", b =>
                {
                    b.Property<int>("PlayerId");

                    b.Property<int>("CampaignId");

                    b.HasKey("PlayerId", "CampaignId");

                    b.HasIndex("CampaignId");

                    b.ToTable("CampaignPlayer");
                });

            modelBuilder.Entity("ExperienceTracker.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampaignId");

                    b.Property<string>("Name");

                    b.Property<int>("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("ExperienceTracker.Models.CharacterEncounter", b =>
                {
                    b.Property<int>("CharacterId");

                    b.Property<int>("EncounterId");

                    b.Property<int>("Id");

                    b.HasKey("CharacterId", "EncounterId");

                    b.HasIndex("EncounterId");

                    b.ToTable("CharacterEncounter");
                });

            modelBuilder.Entity("ExperienceTracker.Models.Encounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdditionalExperience");

                    b.Property<int?>("CampaignId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("Encounters");
                });

            modelBuilder.Entity("ExperienceTracker.Models.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Experience");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("ExperienceTracker.Models.MonsterEncounter", b =>
                {
                    b.Property<int>("MonsterId");

                    b.Property<int>("EncounterId");

                    b.Property<int>("Count");

                    b.Property<int>("Id");

                    b.HasKey("MonsterId", "EncounterId");

                    b.HasIndex("EncounterId");

                    b.ToTable("MonsterEncounter");
                });

            modelBuilder.Entity("ExperienceTracker.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ExperienceTracker.Models.CampaignPlayer", b =>
                {
                    b.HasOne("ExperienceTracker.Models.Campaign", "Campaign")
                        .WithMany("Players")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExperienceTracker.Models.Player", "Player")
                        .WithMany("Campaigns")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ExperienceTracker.Models.Character", b =>
                {
                    b.HasOne("ExperienceTracker.Models.Campaign", "Campaign")
                        .WithMany("Characters")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExperienceTracker.Models.Player", "Player")
                        .WithMany("Characters")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ExperienceTracker.Models.CharacterEncounter", b =>
                {
                    b.HasOne("ExperienceTracker.Models.Character", "Character")
                        .WithMany("Encounters")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExperienceTracker.Models.Encounter", "Encounter")
                        .WithMany("PlayerCharacters")
                        .HasForeignKey("EncounterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ExperienceTracker.Models.Encounter", b =>
                {
                    b.HasOne("ExperienceTracker.Models.Campaign", "Campaign")
                        .WithMany("Encounters")
                        .HasForeignKey("CampaignId");
                });

            modelBuilder.Entity("ExperienceTracker.Models.MonsterEncounter", b =>
                {
                    b.HasOne("ExperienceTracker.Models.Encounter", "Encounter")
                        .WithMany("Monsters")
                        .HasForeignKey("EncounterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExperienceTracker.Models.Monster", "Monster")
                        .WithMany("Encounters")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
